@page "/counter"
@using Blazored.LocalStorage;
@inject ILocalStorageService LocalStorage



 <div class="row">
    <div class="col s12 m6">
      <div class="card blue-grey darken-1">
        <div class="card-content white-text">
          <span class="card-title">Card Title</span>
                <p>@MyContext.Counter</p>
        </div>
        <div class="card-action">
                <a class="waves-effect waves-light btn" @onclick="Increment">Increment</a>
        </div>
      </div>
    </div>
  </div>
            





@code {

    [CascadingParameter]
    public MyContext MyContext { get; set; }

    private const string counterKey = "counter";

    private async Task Increment()
    {
        MyContext.Counter++;

        await LocalStorage.SetItemAsync<int>(counterKey, MyContext.Counter);
    }

    protected override async Task OnInitializedAsync()
    {
        MyContext.Counter = await LocalStorage.GetItemAsync<int>(counterKey);

        LocalStorage.Changed += LocalStorage_Changed;
    }

    private void LocalStorage_Changed(object? sender, ChangedEventArgs e)
    {
        if (e.Key == counterKey)
        {
            MyContext.Counter = (int)e.NewValue;
            StateHasChanged();
        }
    }
}